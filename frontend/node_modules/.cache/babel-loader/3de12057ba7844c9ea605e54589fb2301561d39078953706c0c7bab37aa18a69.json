{"ast":null,"code":"import api from './api';\nexport const gasolinasService = {\n  async getAll() {\n    const response = await api.get('/gasolinas');\n    return response.data;\n  },\n  async getById(id) {\n    const response = await api.get(`/gasolinas/${id}`);\n    return response.data;\n  },\n  async create(data) {\n    const response = await api.post('/gasolinas', data);\n    return response.data;\n  },\n  async update(id, data) {\n    const response = await api.patch(`/gasolinas/${id}`, data);\n    return response.data;\n  },\n  async delete(id) {\n    await api.delete(`/gasolinas/${id}`);\n  },\n  async getStats() {\n    const response = await api.get('/gasolinas/stats');\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","gasolinasService","getAll","response","get","data","getById","id","create","post","update","patch","delete","getStats"],"sources":["C:/Users/vale/Desktop/IBM_OIL/frontend/src/services/gasolinasService.ts"],"sourcesContent":["import api from './api';\r\n\r\nexport interface Gasolina {\r\n  id: number;\r\n  nombre: string;\r\n  demanda: number;\r\n  precio: number;\r\n  octanajeMinimo: number;\r\n  plomoMaximo: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface CreateGasolinaDto {\r\n  nombre: string;\r\n  demanda: number;\r\n  precio: number;\r\n  octanajeMinimo: number;\r\n  plomoMaximo: number;\r\n}\r\n\r\nexport interface UpdateGasolinaDto {\r\n  nombre?: string;\r\n  demanda?: number;\r\n  precio?: number;\r\n  octanajeMinimo?: number;\r\n  plomoMaximo?: number;\r\n}\r\n\r\nexport const gasolinasService = {\r\n  async getAll(): Promise<Gasolina[]> {\r\n    const response = await api.get('/gasolinas');\r\n    return response.data;\r\n  },\r\n\r\n  async getById(id: number): Promise<Gasolina> {\r\n    const response = await api.get(`/gasolinas/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  async create(data: CreateGasolinaDto): Promise<Gasolina> {\r\n    const response = await api.post('/gasolinas', data);\r\n    return response.data;\r\n  },\r\n\r\n  async update(id: number, data: UpdateGasolinaDto): Promise<Gasolina> {\r\n    const response = await api.patch(`/gasolinas/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  async delete(id: number): Promise<void> {\r\n    await api.delete(`/gasolinas/${id}`);\r\n  },\r\n\r\n  async getStats(): Promise<{ totalDemand: number; averagePrice: number }> {\r\n    const response = await api.get('/gasolinas/stats');\r\n    return response.data;\r\n  },\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AA6BvB,OAAO,MAAMC,gBAAgB,GAAG;EAC9B,MAAMC,MAAMA,CAAA,EAAwB;IAClC,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,OAAOA,CAACC,EAAU,EAAqB;IAC3C,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAcG,EAAE,EAAE,CAAC;IAClD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,MAAMA,CAACH,IAAuB,EAAqB;IACvD,MAAMF,QAAQ,GAAG,MAAMH,GAAG,CAACS,IAAI,CAAC,YAAY,EAAEJ,IAAI,CAAC;IACnD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMK,MAAMA,CAACH,EAAU,EAAEF,IAAuB,EAAqB;IACnE,MAAMF,QAAQ,GAAG,MAAMH,GAAG,CAACW,KAAK,CAAC,cAAcJ,EAAE,EAAE,EAAEF,IAAI,CAAC;IAC1D,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMO,MAAMA,CAACL,EAAU,EAAiB;IACtC,MAAMP,GAAG,CAACY,MAAM,CAAC,cAAcL,EAAE,EAAE,CAAC;EACtC,CAAC;EAED,MAAMM,QAAQA,CAAA,EAA2D;IACvE,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
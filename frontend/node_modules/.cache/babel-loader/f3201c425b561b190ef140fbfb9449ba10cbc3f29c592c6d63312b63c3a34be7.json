{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valen\\\\OneDrive\\\\Escritorio\\\\IBM_OIL\\\\frontend\\\\src\\\\pages\\\\ParametrosPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Card, CardContent, TextField, Button, Alert, CircularProgress } from '@mui/material';\nimport { Save as SaveIcon, Edit as EditIcon, Cancel as CancelIcon } from '@mui/icons-material';\nimport { parametrosService } from '../services/parametrosService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ParametrosPage = () => {\n  _s();\n  var _prodCostParam$prodCo, _maxProdParam$maxProd;\n  // Estado para ProdCostParam\n  const [prodCostParam, setProdCostParam] = useState(null);\n  const [prodCostParamOriginal, setProdCostParamOriginal] = useState(null);\n  const [editingProdCost, setEditingProdCost] = useState(false);\n  const [loadingProdCost, setLoadingProdCost] = useState(true);\n  const [savingProdCost, setSavingProdCost] = useState(false);\n  const [successProdCost, setSuccessProdCost] = useState('');\n  const [errorProdCost, setErrorProdCost] = useState('');\n\n  // Estado para MaxProdParam\n  const [maxProdParam, setMaxProdParam] = useState(null);\n  const [maxProdParamOriginal, setMaxProdParamOriginal] = useState(null);\n  const [editingMaxProd, setEditingMaxProd] = useState(false);\n  const [loadingMaxProd, setLoadingMaxProd] = useState(true);\n  const [savingMaxProd, setSavingMaxProd] = useState(false);\n  const [successMaxProd, setSuccessMaxProd] = useState('');\n  const [errorMaxProd, setErrorMaxProd] = useState('');\n  useEffect(() => {\n    loadProdCostParam();\n    loadMaxProdParam();\n  }, []);\n  const loadProdCostParam = async () => {\n    try {\n      setLoadingProdCost(true);\n      const data = await parametrosService.getProdCostParams();\n      setProdCostParam(data[0]);\n      setProdCostParamOriginal(data[0]);\n    } catch (error) {\n      setErrorProdCost('Error al cargar el parámetro de costo');\n    } finally {\n      setLoadingProdCost(false);\n    }\n  };\n  const loadMaxProdParam = async () => {\n    try {\n      setLoadingMaxProd(true);\n      const data = await parametrosService.getMaxProdParams();\n      setMaxProdParam(data[0]);\n      setMaxProdParamOriginal(data[0]);\n    } catch (error) {\n      setErrorMaxProd('Error al cargar el parámetro de producción máxima');\n    } finally {\n      setLoadingMaxProd(false);\n    }\n  };\n  const handleEditProdCost = () => {\n    setEditingProdCost(true);\n    setErrorProdCost('');\n    setSuccessProdCost('');\n  };\n  const handleCancelProdCost = () => {\n    setEditingProdCost(false);\n    setProdCostParam(prodCostParamOriginal);\n    setErrorProdCost('');\n    setSuccessProdCost('');\n  };\n  const handleSaveProdCost = async () => {\n    if (!prodCostParam) return;\n    try {\n      setSavingProdCost(true);\n      setErrorProdCost('');\n      setSuccessProdCost('');\n      await parametrosService.updateProdCostParam(1, prodCostParam); // ID fijo 1\n      setSuccessProdCost('Parámetro de costo actualizado exitosamente');\n      setProdCostParamOriginal(prodCostParam);\n      setEditingProdCost(false);\n      await loadProdCostParam();\n    } catch (error) {\n      setErrorProdCost('Error al guardar el parámetro de costo');\n    } finally {\n      setSavingProdCost(false);\n    }\n  };\n  const handleEditMaxProd = () => {\n    setEditingMaxProd(true);\n    setErrorMaxProd('');\n    setSuccessMaxProd('');\n  };\n  const handleCancelMaxProd = () => {\n    setEditingMaxProd(false);\n    setMaxProdParam(maxProdParamOriginal);\n    setErrorMaxProd('');\n    setSuccessMaxProd('');\n  };\n  const handleSaveMaxProd = async () => {\n    if (!maxProdParam) return;\n    try {\n      setSavingMaxProd(true);\n      setErrorMaxProd('');\n      setSuccessMaxProd('');\n      await parametrosService.updateMaxProdParam(1, maxProdParam); // ID fijo 1\n      setSuccessMaxProd('Parámetro de producción máxima actualizado exitosamente');\n      setMaxProdParamOriginal(maxProdParam);\n      setEditingMaxProd(false);\n      await loadMaxProdParam();\n    } catch (error) {\n      setErrorMaxProd('Error al guardar el parámetro de producción máxima');\n    } finally {\n      setSavingMaxProd(false);\n    }\n  };\n  if (loadingProdCost || loadingMaxProd) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Par\\xE1metros del Modelo de Optimizaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Par\\xE1metro de Costo Fijo por Litro Producido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), errorProdCost && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          onClose: () => setErrorProdCost(''),\n          children: errorProdCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), successProdCost && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mb: 2\n          },\n          onClose: () => setSuccessProdCost(''),\n          children: successProdCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Costo Fijo por Litro Producido (USD)\",\n            type: \"number\",\n            value: (_prodCostParam$prodCo = prodCostParam === null || prodCostParam === void 0 ? void 0 : prodCostParam.prodCost) !== null && _prodCostParam$prodCo !== void 0 ? _prodCostParam$prodCo : '',\n            onChange: e => setProdCostParam({\n              ...prodCostParam,\n              prodCost: parseFloat(e.target.value)\n            }),\n            fullWidth: true,\n            disabled: !editingProdCost,\n            inputProps: {\n              min: 0,\n              step: 0.01\n            },\n            helperText: \"Costo adicional por litro adem\\xE1s del costo del aceite crudo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: 2,\n              mt: 2\n            },\n            children: !editingProdCost ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 30\n              }, this),\n              onClick: handleEditProdCost,\n              children: \"Editar Par\\xE1metro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 32\n                }, this),\n                onClick: handleCancelProdCost,\n                disabled: savingProdCost,\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 32\n                }, this),\n                onClick: handleSaveProdCost,\n                disabled: savingProdCost,\n                children: savingProdCost ? 'Guardando...' : 'Guardar Parámetro'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Par\\xE1metro de Producci\\xF3n M\\xE1xima Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), errorMaxProd && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          onClose: () => setErrorMaxProd(''),\n          children: errorMaxProd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), successMaxProd && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mb: 2\n          },\n          onClose: () => setSuccessMaxProd(''),\n          children: successMaxProd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Producci\\xF3n M\\xE1xima Total (L)\",\n            type: \"number\",\n            value: (_maxProdParam$maxProd = maxProdParam === null || maxProdParam === void 0 ? void 0 : maxProdParam.maxProduction) !== null && _maxProdParam$maxProd !== void 0 ? _maxProdParam$maxProd : '',\n            onChange: e => setMaxProdParam({\n              ...maxProdParam,\n              maxProduction: parseFloat(e.target.value)\n            }),\n            fullWidth: true,\n            disabled: !editingMaxProd,\n            inputProps: {\n              min: 0,\n              step: 1\n            },\n            helperText: \"Cantidad m\\xE1xima de litros que se pueden producir en total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: 2,\n              mt: 2\n            },\n            children: !editingMaxProd ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 30\n              }, this),\n              onClick: handleEditMaxProd,\n              children: \"Editar Par\\xE1metro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 32\n                }, this),\n                onClick: handleCancelMaxProd,\n                disabled: savingMaxProd,\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 32\n                }, this),\n                onClick: handleSaveMaxProd,\n                disabled: savingMaxProd,\n                children: savingMaxProd ? 'Guardando...' : 'Guardar Parámetro'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(ParametrosPage, \"JOXqCcPUkWu3U7p+9LXyqE4a800=\");\n_c = ParametrosPage;\nexport default ParametrosPage;\nvar _c;\n$RefreshReg$(_c, \"ParametrosPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","TextField","Button","Alert","CircularProgress","Save","SaveIcon","Edit","EditIcon","Cancel","CancelIcon","parametrosService","jsxDEV","_jsxDEV","Fragment","_Fragment","ParametrosPage","_s","_prodCostParam$prodCo","_maxProdParam$maxProd","prodCostParam","setProdCostParam","prodCostParamOriginal","setProdCostParamOriginal","editingProdCost","setEditingProdCost","loadingProdCost","setLoadingProdCost","savingProdCost","setSavingProdCost","successProdCost","setSuccessProdCost","errorProdCost","setErrorProdCost","maxProdParam","setMaxProdParam","maxProdParamOriginal","setMaxProdParamOriginal","editingMaxProd","setEditingMaxProd","loadingMaxProd","setLoadingMaxProd","savingMaxProd","setSavingMaxProd","successMaxProd","setSuccessMaxProd","errorMaxProd","setErrorMaxProd","loadProdCostParam","loadMaxProdParam","data","getProdCostParams","error","getMaxProdParams","handleEditProdCost","handleCancelProdCost","handleSaveProdCost","updateProdCostParam","handleEditMaxProd","handleCancelMaxProd","handleSaveMaxProd","updateMaxProdParam","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","mb","severity","onClose","flexDirection","gap","label","type","value","prodCost","onChange","e","parseFloat","target","fullWidth","disabled","inputProps","min","step","helperText","mt","startIcon","onClick","maxProduction","_c","$RefreshReg$"],"sources":["C:/Users/valen/OneDrive/Escritorio/IBM_OIL/frontend/src/pages/ParametrosPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport { \r\n  Save as SaveIcon, \r\n  Edit as EditIcon, \r\n  Cancel as CancelIcon \r\n} from '@mui/icons-material';\r\nimport { parametrosService, ProdCostParam, MaxProdParam } from '../services/parametrosService';\r\n\r\nconst ParametrosPage: React.FC = () => {\r\n  // Estado para ProdCostParam\r\n  const [prodCostParam, setProdCostParam] = useState<ProdCostParam | null>(null);\r\n  const [prodCostParamOriginal, setProdCostParamOriginal] = useState<ProdCostParam | null>(null);\r\n  const [editingProdCost, setEditingProdCost] = useState(false);\r\n  const [loadingProdCost, setLoadingProdCost] = useState(true);\r\n  const [savingProdCost, setSavingProdCost] = useState(false);\r\n  const [successProdCost, setSuccessProdCost] = useState('');\r\n  const [errorProdCost, setErrorProdCost] = useState('');\r\n\r\n  // Estado para MaxProdParam\r\n  const [maxProdParam, setMaxProdParam] = useState<MaxProdParam | null>(null);\r\n  const [maxProdParamOriginal, setMaxProdParamOriginal] = useState<MaxProdParam | null>(null);\r\n  const [editingMaxProd, setEditingMaxProd] = useState(false);\r\n  const [loadingMaxProd, setLoadingMaxProd] = useState(true);\r\n  const [savingMaxProd, setSavingMaxProd] = useState(false);\r\n  const [successMaxProd, setSuccessMaxProd] = useState('');\r\n  const [errorMaxProd, setErrorMaxProd] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadProdCostParam();\r\n    loadMaxProdParam();\r\n  }, []);\r\n\r\n  const loadProdCostParam = async () => {\r\n    try {\r\n      setLoadingProdCost(true);\r\n      const data = await parametrosService.getProdCostParams();\r\n      setProdCostParam(data[0]);\r\n      setProdCostParamOriginal(data[0]);\r\n    } catch (error) {\r\n      setErrorProdCost('Error al cargar el parámetro de costo');\r\n    } finally {\r\n      setLoadingProdCost(false);\r\n    }\r\n  };\r\n\r\n  const loadMaxProdParam = async () => {\r\n    try {\r\n      setLoadingMaxProd(true);\r\n      const data = await parametrosService.getMaxProdParams();\r\n      setMaxProdParam(data[0]);\r\n      setMaxProdParamOriginal(data[0]);\r\n    } catch (error) {\r\n      setErrorMaxProd('Error al cargar el parámetro de producción máxima');\r\n    } finally {\r\n      setLoadingMaxProd(false);\r\n    }\r\n  };\r\n\r\n  const handleEditProdCost = () => {\r\n    setEditingProdCost(true);\r\n    setErrorProdCost('');\r\n    setSuccessProdCost('');\r\n  };\r\n\r\n  const handleCancelProdCost = () => {\r\n    setEditingProdCost(false);\r\n    setProdCostParam(prodCostParamOriginal);\r\n    setErrorProdCost('');\r\n    setSuccessProdCost('');\r\n  };\r\n\r\n  const handleSaveProdCost = async () => {\r\n    if (!prodCostParam) return;\r\n    try {\r\n      setSavingProdCost(true);\r\n      setErrorProdCost('');\r\n      setSuccessProdCost('');\r\n      await parametrosService.updateProdCostParam(1, prodCostParam); // ID fijo 1\r\n      setSuccessProdCost('Parámetro de costo actualizado exitosamente');\r\n      setProdCostParamOriginal(prodCostParam);\r\n      setEditingProdCost(false);\r\n      await loadProdCostParam();\r\n    } catch (error: any) {\r\n      setErrorProdCost('Error al guardar el parámetro de costo');\r\n    } finally {\r\n      setSavingProdCost(false);\r\n    }\r\n  };\r\n\r\n  const handleEditMaxProd = () => {\r\n    setEditingMaxProd(true);\r\n    setErrorMaxProd('');\r\n    setSuccessMaxProd('');\r\n  };\r\n\r\n  const handleCancelMaxProd = () => {\r\n    setEditingMaxProd(false);\r\n    setMaxProdParam(maxProdParamOriginal);\r\n    setErrorMaxProd('');\r\n    setSuccessMaxProd('');\r\n  };\r\n\r\n  const handleSaveMaxProd = async () => {\r\n    if (!maxProdParam) return;\r\n    try {\r\n      setSavingMaxProd(true);\r\n      setErrorMaxProd('');\r\n      setSuccessMaxProd('');\r\n      await parametrosService.updateMaxProdParam(1, maxProdParam); // ID fijo 1\r\n      setSuccessMaxProd('Parámetro de producción máxima actualizado exitosamente');\r\n      setMaxProdParamOriginal(maxProdParam);\r\n      setEditingMaxProd(false);\r\n      await loadMaxProdParam();\r\n    } catch (error: any) {\r\n      setErrorMaxProd('Error al guardar el parámetro de producción máxima');\r\n    } finally {\r\n      setSavingMaxProd(false);\r\n    }\r\n  };\r\n\r\n  if (loadingProdCost || loadingMaxProd) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Parámetros del Modelo de Optimización\r\n      </Typography>\r\n\r\n      {/* Sección ProdCostParam */}\r\n      <Card sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Parámetro de Costo Fijo por Litro Producido\r\n          </Typography>\r\n          {errorProdCost && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setErrorProdCost('')}>\r\n              {errorProdCost}\r\n            </Alert>\r\n          )}\r\n          {successProdCost && (\r\n            <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccessProdCost('')}>\r\n              {successProdCost}\r\n            </Alert>\r\n          )}\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n            <TextField\r\n              label=\"Costo Fijo por Litro Producido (USD)\"\r\n              type=\"number\"\r\n              value={prodCostParam?.prodCost ?? ''}\r\n              onChange={(e) => setProdCostParam({ ...prodCostParam!, prodCost: parseFloat(e.target.value) })}\r\n              fullWidth\r\n              disabled={!editingProdCost}\r\n              inputProps={{ min: 0, step: 0.01 }}\r\n              helperText=\"Costo adicional por litro además del costo del aceite crudo\"\r\n            />\r\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 2 }}>\r\n              {!editingProdCost ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<EditIcon />}\r\n                  onClick={handleEditProdCost}\r\n                >\r\n                  Editar Parámetro\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={handleCancelProdCost}\r\n                    disabled={savingProdCost}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSaveProdCost}\r\n                    disabled={savingProdCost}\r\n                  >\r\n                    {savingProdCost ? 'Guardando...' : 'Guardar Parámetro'}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Sección MaxProdParam */}\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Parámetro de Producción Máxima Total\r\n          </Typography>\r\n          {errorMaxProd && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setErrorMaxProd('')}>\r\n              {errorMaxProd}\r\n            </Alert>\r\n          )}\r\n          {successMaxProd && (\r\n            <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccessMaxProd('')}>\r\n              {successMaxProd}\r\n            </Alert>\r\n          )}\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n            <TextField\r\n              label=\"Producción Máxima Total (L)\"\r\n              type=\"number\"\r\n              value={maxProdParam?.maxProduction ?? ''}\r\n              onChange={(e) => setMaxProdParam({ ...maxProdParam!, maxProduction: parseFloat(e.target.value) })}\r\n              fullWidth\r\n              disabled={!editingMaxProd}\r\n              inputProps={{ min: 0, step: 1 }}\r\n              helperText=\"Cantidad máxima de litros que se pueden producir en total\"\r\n            />\r\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 2 }}>\r\n              {!editingMaxProd ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<EditIcon />}\r\n                  onClick={handleEditMaxProd}\r\n                >\r\n                  Editar Parámetro\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={handleCancelMaxProd}\r\n                    disabled={savingMaxProd}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSaveMaxProd}\r\n                    disabled={savingMaxProd}\r\n                  >\r\n                    {savingMaxProd ? 'Guardando...' : 'Guardar Parámetro'}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ParametrosPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}